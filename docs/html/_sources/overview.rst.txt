========
Overview
========

Database structure
==================

.. figure:: ds_diagram_cropped.png
    :width: 485
    :height: 480
    :align: center
    :alt: A diagram showing the relationship between the five core data structures that make up a Database.

    A diagram showing the relationship between the five core data structures
    that make up a Database.

The Database structure was designed to be able to be as flexible as possible to
incorporate different types of data (computational/experimental) while also
making the datasets efficient to query, store, and manipulate. A Database is
stored as a Mongo database with  five core data structures:

* :class:`~colabfit.tools.configuration.Configuration` (CO, :code:`collection_name='configurations'`):
    The information necessary to uniquely define the input to a material
    property calculation or the atomic geometry present in an experimental
    measurement. At a minimum, a configuration must include the atomic species
    and nuclear positions. In the case of periodic or semi-periodic systems,
    the simulation cell vectors must also be included. Information related to
    atomic charges, magnetic moments, and electric dipoles/quadrupoles may
    optionally be specified, and may serve either as constraints on a
    first-principles model or as inputs to an effective model. Additional
    metadata related to the configuration can also be provided (e.g., the parent
    structure from which it was generated by perturbing its positions).
* :class:`~colabfit.tools.property.Property` (PR, :code:`collection_name='properties'`):
      The outputs from a material property calculation, e.g. DFT-computed
      energy/forces/stress, or experimental measurement. A property points to
      one or more individual :class:`Configuration`
      instances; if the :class:`Configuration` objects that a property points to
      contain optional inputs such as charges or magnetic moments, then the
      property must contain an associated output value for each of them (in the
      event that these inputs serve asi constraints, the output values will be
      equal to the input values). Generally, it is best practice for a property
      to point to a :class:`PropertySettingsObject`.
* :class:`~colabfit.tools.property_settings.PropertySettings` (PSO, :code:`collection_name='property_settings'`):
      Additional metadata useful for setting up the calculation or experiment
      (e.g., the name of the software package(s) used, their versions, input
      files, experimental method or devices, etc.).
* :class:`~colabfit.tools.configuration_sets.ConfigurationSet` (CS, :code:`collection_name='configuration_sets'`):
      An object defining a group of one or more :class:`Configuration` instances
      and providing useful metadata for organizing datasets (e.g., "Snapshots
      from a molecular dynamics run at 1000K").
* :class:`~colabfit.tools.dataset.Dataset` (DS, :code:`collection_name='datasets'`):
      An object used to effectively aggregate information from all of the data
      structures defined above to create a body of information that provides a
      complete, discoverable training set. A :class:`Dataset` points to one or more
      :class:`ConfigurationSet` objects, one or more :class:`Property` objects,
      and one or more other :class:`Dataset` objects.

MongoDB outline
===============

The underlying Mongo database has the following structure:

.. code-block:: text
    
    /configurations
        _id
        atomic_numbers
        positions
        cell
        pbc
        names
        labels
        elements
        nelements
        elements_ratios
        chemical_formula_reduced
        chemical_formula_anonymous
        chemical_formula_hill
        nsites
        dimension_types
        nperiodic_dimensions
        latice_vectors
        last_modified
        relationships
            properties
            configuration_sets

    /properties
        _id
        type
        property_name
            each field in the property definition
        methods
        labels
        last_modified
        relationships
            property_settings
            configurations

    /property_settings
        _id
        method
        decription
        labels
        files
            file_name
            file_contents
        relationships
            properties

    /configuration_sets
        _id
        last_modified
        aggregated_info
            (from configurations)
            nconfigurations
            nsites
            nelements
            chemical_systems
            elements
            individual_elements_ratios
            total_elements_ratios
            labels
            labels_counts
            chemical_formula_reduced
            chemical_formula_anonymous
            chemical_formula_hill
       
